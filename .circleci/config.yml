version: 2.1
commands:
  install-dependencies:
    steps:
      - run:
          name: ↑ Installing dependencies
          command: |
            apt-get update && apt-get -y install git rsync python-dev graphviz libgraphviz-dev pkg-config python3-sphinx
            pip install --user -r https://raw.githubusercontent.com/FCP-INDI/C-PAC/develop/requirements.txt
            pip install --user git+https://github.com/${CIRCLE_PROJECT_USERNAME}/C-PAC.git@develop sphinx m2r numpydoc PyGithub sphinxcontrib-programoutput torch
            git clone https://github.com/${CIRCLE_PROJECT_USERNAME}/C-PAC.git /build/C-PAC
            cd /build/C-PAC
            git checkout develop
            cd /build
jobs:
  build-develop:
    working_directory: /build
    docker:
      - image: python:3.7
    steps:
      - checkout
      - install-dependencies
      - run:
          name: 🏗️ Building develop branch docs
          command: ./bin/build develop
      - run:
          name: Storing commit message
          command: git log origin/source -1 --oneline --pretty=%s > /root/GITMESSAGE.txt
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: /
          # Must be relative path from root
          paths: 
            - build/develop
            - root/.ssh
            - root/GITMESSAGE.txt
          
  deploy:
    working_directory: /
    docker:
      - image: python:3.7
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /
      - install-dependencies
      - run:
          name: 🔧 Configuring git user
          command: |
            git config --global user.email "ci-build@fcp-indi.github.com"
            git config --global user.name "ci-build"
      - run:
          name: 🚀 Deploying docs
          command: |
            cd /build
            git clone --single-branch --branch gh-pages git@github.com:${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git /tmp/repo || git clone --single-branch --branch master git@github.com:${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git /tmp/repo
            rsync -rtv ./ /tmp/repo/ --exclude '.git'
            cd /tmp/repo
            git rm -f .gitignore || rm -f .gitignore || true
            git add .
            git rm -fr docs/develop/developer/_sources || rm -f docs/develop/developer/_sources || true
            git rm -fr docs/develop/developer/.doctrees || rm -f docs/develop/developer/.doctrees || true
            git rm -fr docs/develop/user/_sources || rm -f docs/develop/user/_sources || true
            git rm -fr docs/develop/user/.doctrees || rm -f docs/develop/user/.doctrees || true
            git commit -m "$(cat /root/GITMESSAGE.txt)" --allow-empty
            git push origin HEAD:gh-pages -f
            cd -

workflows:
  version: 2.1
  build_and_deploy:
    jobs:
      - build-develop:
          filters:
            branches:
              only:
                - source
      # - build-latest:
      #     filters:
      #       branches:
      #         only:
      #           - source
      - deploy:
          filters:
            branches:
              only:
                - source
          requires:
            - build-develop
            # - build-latests