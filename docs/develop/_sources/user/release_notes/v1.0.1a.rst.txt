Version 1.0.1 Beta (Dec 5, 2016)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The updates to CPAC in this new version include:


* Nipype and CPAC have been updated to use a resource aware scheduler that incorporates information about the amount of memory and cores currently available when choosing a pipeline step to run. This should maximize running different pipeline steps in parallel while reducing the occurrence of out-of-memory errors and system lock-ups.
* CPAC now calculates network centrality derivatives using the new 3dDegreeCentrality, 3dECM, and 3dLFCD AFNI tools implemented by our developers. These implementations are optimized to minimize the memory requirements while speeding up computation time. If you have an already-existing installation of AFNI that does not have these newer tools, you can update your installation by running "@update.afni.binaries" from your AFNI installation directory.
* Group-level analysis has been over-hauled to make it run more quickly, handle repeated measures, make entering contrasts more intuitive, and improve transparency in to the model generation process.
* The BIDS data format is now supported and the participant list builder can generate a participant list given a BIDS base directory.
* CPAC inputs can now be directly downloaded from (and outputs can be directly uploaded to) AWS S3 cloud storage.
* For the subject list generated, we replaced the confusing "%s" identifiers in file path templates with {participant}, {site}, {session} to make generating these templates more user friendly. These identifiers are also more flexible, allowing you to combine them with substrings or include multiples, allowing for greater freedom in custom input data directory formats.
* The GUI has been reorganized to simplify pipeline configuration, and specifically to improve handling of nuisance correction strategies and specifying ROIs for time series extraction and seed correlation analysis.
* SLURM cluster resource scheduler compatibility added.
* The output resolution in MNI space for statistical derivatives (e.g., ReHo, DC, etc) and 4D preprocessed functional data can be specified separately. The user can now also decide not to write the 4D preprocessed data into MNI space. Both of these steps can significantly reduce memory and disk space requirements.
* Functional nuisance regressors data now included in the output.

Updated user documentation for this release can be found here:
http://fcp-indi.github.io/docs/user/index.html

And as always, you can contact us here for user support and discussion:
https://groups.google.com/forum/#!forum/cpax_forum

Regards,
The CPAC development team.


