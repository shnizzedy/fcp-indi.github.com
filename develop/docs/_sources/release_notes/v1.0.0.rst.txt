Version 1.0.0 Beta (Nov 4, 2016)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Dear Colleagues,

We are happy to inform you that we recently released CPAC Version 1.0.0 Beta. You can update your existing installations of CPAC using instructions `here <http://fcp-indi.github.io/docs/user/install.html#updating-c-pac>`_ and instructions for a fresh install of CPAC are `here <http://fcp-indi.github.io/docs/user/install.html>`_. Please let us know if you have any questions or feedback by posting to the `forum <https://groups.google.com/forum/#!forum/cpax_forum>`_.

The updates to CPAC in this new version include:


* CPAC now calculates network centrality derivatives using the new 3dDegreeCentrality, 3dEigenvectorCentrality, and 3dLFCD AFNI tools implemented by our developers. These implementations are optimized to minimize the memory requirements while speeding up computation time. If you have an already-existing installation of AFNI that does not have these newer tools, you can update your installation by running "@update.afni.binaries" from your AFNI installation directory.
* CPAC inputs can now be directly downloaded from and outputs can be directly uploaded to AWS S3 cloud storage.
* SLURM cluster resource scheduler compatibility added.
* We removed user specified segmentation thresholds from the segmentation workflow and instead rely on the default thresholds used by FSL's FAST tool. This removes the issue of choosing an appropriate threshold, which would previously result in no WM or CSF signals for nuisance correction.
* The GUI has been reorganized to simplify pipeline configuration, and specifically to improve handling of nuisance correction strategies and specifying ROIs for time series extraction and seed correlation analysis.
* Group-level analysis has been over-hauled to make it run more quickly, handle repeated measures, make entering contrasts more intuitive, and improve transparency in to the model generation process.
* Nipype and CPAC have been updated to use a resource aware scheduler that incorporates information about the amount of memory and cores currently available when choosing a pipeline step to run. This should maximize running different pipeline steps in parallel while reducing the occurrence of out-of-memory errors and system lock-ups.
* The output resolution in MNI space for statistical derivatives (e.g., ReHo, DC, etc) and 4D preprocessed functional data can be specified separately. The user can now also decide not to write the 4D preprocessed data into MNI space. Both of these steps can significantly reduce memory and disk space requirements.
* Improved logging.
* Column names of ROI time series files and file names for SCA outputs are now based on the unique identifier used for the ROI in the corresponding atlas, making it easier to relate the files back to the ROIs.
* For the subject list generated, we replaced the confusing "%s" identifiers in file path templates with {participant}, {site}, {session} to make generating these templates more user friendly.
* Added support for BIDS file structure.

Along with the updates to the code, we have made many much needed updates to the user documentation. We have also updated the cpac_resources.tar.gz file to include 4mm templates.

Updated user documentation for this release can be found here:
http://fcp-indi.github.io/docs/user/index.html

And as always, you can contact us here for user support and discussion:
https://groups.google.com/forum/#!forum/cpax_forum

Regards,
The CPAC development team.


